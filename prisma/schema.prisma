// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite" // Use "postgresql" for PostgreSQL, "mysql" for MySQL, etc.
  url      = env("DATABASE_URL")
}

model Aluno {
  id        Int      @id @default(autoincrement())
  nome      String
  email     String   @unique
  cpf       String   @unique
  telefone  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  matriculas Matricula[]

  @@map("alunos")
}

model Curso {
  id          Int      @id @default(autoincrement())
  nome        String
  descricao   String?
  cargaHoraria Int
  preco       Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  matriculas Matricula[]

  @@map("cursos")
}

model Matricula {
  id          Int      @id @default(autoincrement())
  alunoId     Int
  cursoId     Int
  dataMatricula DateTime @default(now())
  status      String   @default("ATIVA") // ATIVA, CANCELADA, CONCLUIDA
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  aluno Aluno @relation(fields: [alunoId], references: [id], onDelete: Cascade)
  curso Curso @relation(fields: [cursoId], references: [id], onDelete: Cascade)

  @@unique([alunoId, cursoId])
  @@map("matriculas")
}
